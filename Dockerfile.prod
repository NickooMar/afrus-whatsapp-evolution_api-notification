# Etapa de construcción
FROM golang:1.22-alpine AS build-env

RUN apk add --update --upgrade --no-cache build-base

# Define argumentos que se pueden pasar en tiempo de construcción
ARG ENVIRONMENT
ARG SERVER_PORT
ARG RABBITMQ_URL
ARG RABBITMQ_PORT
ARG RABBITMQ_USER
ARG RABBITMQ_PASSWORD
ARG RABBITMQ_MANAGER_PORT
ARG RABBITMQ_EVOLUTION_API_NOTIFICATION_EXCHANGE
ARG RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_QUEUE
ARG RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_ROUTING_KEY
ARG RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_QUEUE
ARG RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_ROUTING_KEY
ARG RABBITMQ_BILLING_EXCHANGE
ARG RABBITMQ_BILLING_QUEUE
ARG RABBITMQ_BILLING_ROUTING_KEY
ARG AFRUS_DB_USER
ARG AFRUS_DB_HOST
ARG AFRUS_DB_PORT
ARG AFRUS_DB_NAME
ARG AFRUS_DB_PASSWORD
ARG AFRUS_DB_SSL_MODE
ARG EVENTS_DB_HOST
ARG EVENTS_DB_PORT
ARG EVENTS_DB_USER
ARG EVENTS_DB_PASSWORD
ARG EVENTS_DB_NAME
ARG EVENTS_DB_SSL_MODE
ARG EVOLUTION_API_BASE_URL
ARG EVOLUTION_API_KEY

WORKDIR /go/src/app

COPY . .

# Build the Go application and output the binary to /go/src/app
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o main cmd/app/main.go

# Etapa final
FROM alpine:3.12
WORKDIR /app

# Copia el binario
COPY --from=build-env /go/src/app/main .

# Establece las variables de entorno a partir de los argumentos de construcción
ENV ENVIRONMENT=${ENVIRONMENT}
ENV SERVER_PORT=${SERVER_PORT}
ENV RABBITMQ_URL=${RABBITMQ_URL}
ENV RABBITMQ_PORT=${RABBITMQ_PORT}
ENV RABBITMQ_USER=${RABBITMQ_USER}
ENV RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
ENV RABBITMQ_MANAGER_PORT=${RABBITMQ_MANAGER_PORT}
ENV RABBITMQ_EVOLUTION_API_NOTIFICATION_EXCHANGE=${RABBITMQ_EVOLUTION_API_NOTIFICATION_EXCHANGE}
ENV RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_QUEUE=${RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_QUEUE}
ENV RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_ROUTING_KEY=${RABBITMQ_EVOLUTION_API_NOTIFICATION_BLAST_ROUTING_KEY}
ENV RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_QUEUE=${RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_QUEUE}
ENV RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_ROUTING_KEY=${RABBITMQ_EVOLUTION_API_NOTIFICATION_AUTORESPONDER_ROUTING_KEY}
ENV RABBITMQ_BILLING_EXCHANGE=${RABBITMQ_BILLING_EXCHANGE}
ENV RABBITMQ_BILLING_QUEUE=${RABBITMQ_BILLING_QUEUE}
ENV RABBITMQ_BILLING_ROUTING_KEY=${RABBITMQ_BILLING_ROUTING_KEY}
ENV AFRUS_DB_USER=${AFRUS_DB_USER}
ENV AFRUS_DB_HOST=${AFRUS_DB_HOST}
ENV AFRUS_DB_PORT=${AFRUS_DB_PORT}
ENV AFRUS_DB_NAME=${AFRUS_DB_NAME}
ENV AFRUS_DB_SSL_MODE=${AFRUS_DB_SSL_MODE}
ENV AFRUS_DB_PASSWORD=${AFRUS_DB_PASSWORD}
ENV EVENTS_DB_USER=${EVENTS_DB_USER}
ENV EVENTS_DB_HOST=${EVENTS_DB_HOST}
ENV EVENTS_DB_PORT=${EVENTS_DB_PORT}
ENV EVENTS_DB_SSL_MODE=${EVENTS_DB_SSL_MODE}
ENV EVENTS_DB_PASSWORD=${EVENTS_DB_PASSWORD}
ENV EVENTS_DB_NAME=${EVENTS_DB_NAME}
ENV EVOLUTION_API_BASE_URL=${EVOLUTION_API_BASE_URL}
ENV EVOLUTION_API_KEY=${EVOLUTION_API_KEY}

ENTRYPOINT ["./main"]